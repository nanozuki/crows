# vi: ft=fish

function init-env
    if test (count $argv) -eq 0
        echo "Not specified item"
        echo "all item:"
        echo basic fish gpg rime golang rust node_lts opam neovim
    end
    for arg in $argv
        switch $arg
            case basic
                init_basic
            case fish
                init_fish
            case gpg
                init_gpg
            case rime
                init_rime
            case go
                init_golang
            case rust
                init_rust
            case node_lts
                init_node_lts
            case opam
                init_opam
            case neovim
                init_neovim
        end
    end
end

## items

function init_basic
    set -Ux XDG_CONFIG_HOME $HOME/.config
    set -Ux XDG_CACHE_HOME  $HOME/.cache
    set -Ux XDG_DATA_HOME   $HOME/.local/share
    set -Ux LC_ALL          en_US.UTF-8
    set -Ux LANG            en_US.UTF-8
    set -Ux EDITOR          nvim
    #{{if eq .chezmoi.os "darwin" }}
    set -Ux XDG_RUNTIME_DIR $TMPDIR
    set -Ux fish_user_paths ~/.local/bin /opt/homebrew/bin /usr/local/bin /usr/local/sbin /usr/bin /usr/sbin /bin /sbin /Library/Apple/usr/bin
    #{{else}}
    set -Ux fish_user_paths ~/.local/bin /usr/local/bin /usr/local/sbin /usr/bin /usr/sbin /bin /sbin
    #{{end}}
end

function init_fish
    if type -q fisher
        return 0
    end
    #{{if eq .chezmoi.os "darwin" }}
    brew_install direnv exa bat btop starship tmux ripgrep fzf
    #{{else}}
    paru_install direnv exa bat btop starship tmux ripgrep fzf
    #{{end}}
    curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
    fisher install jethrokuan/z
    fisher install PatrickF1/fzf.fish
end

function init_gpg
    if type -q gpg
        return 0
    end
    set -Ux GNUPGHOME $XDG_DATA_HOME/gnupg
    mkdir -p $GNUPGHOME
    #{{if eq .chezmoi.os "darwin" }}
    brew_install gnupg pinentry-mac
    #{{else}}
    paru_install gnupg pinentry
end

function init_rime
    if test -d $XDG_DATA_HOME/plum
        return 0
    end
    #{{if eq .chezmoi.os "darwin" }}
    brew_install --cask squirrel
    #{{else}}
    paru_install fcitx5-rime
    set -Ux rime_frontend fcitx5-rime
    #{{end}}
    git clone --depth 1 https://github.com/rime/plum.git $XDG_DATA_HOME/plum
    bash $XDG_DATA_HOME/plum/rime-install prelude
    bash $XDG_DATA_HOME/plum/rime-install essay
    bash $XDG_DATA_HOME/plum/rime-install luna-pinyin
    bash $XDG_DATA_HOME/plum/rime-install double-pinyin
    bash $XDG_DATA_HOME/plum/rime-install emoji
end

function init_golang
    set -Ux GOPATH $XDG_DATA_HOME/go
    add_path $GOPATH/bin
    #{{if eq .chezmoi.os "darwin"}}
    brew_install go 
    #{{else}}
    paru_install go
end

function init_rust
    if type -q cargo
        return
    end
    setUx CARGO_HOME $XDG_DATA_HOME/cargo
    setUx RUSTUP_HOME $XDG_DATA_HOME/rustup
    add_path $CARGO_HOME/bin
    #{{if eq .chezmoi.os "darwin" }}
    brew install rustup
    rustup-init
    #{{else}}
    sudo pacman -S --needed --noconfirm rustup
    rustup toolchain install stable
    rustup default stable
    #{{end}}
end

function init_node_lts
    if type -q node
        return
    end
    set -Ux NPM_CONFIG_USERCONFIG $XDG_CONFIG_HOME/npm/npmrc
    add_path $XDG_DATA_HOME/npm/bin

    set node_index "https://nodejs.org/download/release/index.json"
    #{{if eq .chezmoi.os "darwin" }}
    brew_install gron
    set ver (curl -s $node_index | grep -v 'lts":false' | sed -n '2p' | gron | grep version | cut -d= -f2 | cut -d v -f2 | cut -d. -f1)
    if not brew list --version "node@$ver"
        brew install "node@$ver"
        brew link --overwrite --force "node@$ver"
    end
    #{{else}}
    paru_install gron
    set code (curl -s $node_index | grep -v 'lts":false' | sed -n '2p' | gron | grep lts | cut -d= -d\" -f2 | string lower) 
    paru_install "nodejs-lts-$code" npm
    #{{end}}
    npm config set prefix      $XDG_DATA_HOME/npm
    npm config set cache       $XDG_CACHE_HOME/npm
    npm config set init-module $XDG_CONFIG_HOME/npm/config/npm-init.js
end

function init_opam
    if type -q opam
        return
    end
    #{{if eq .chezmoi.os "darwin" }}
    brew_install opam 
    #{{else}}
    paru_install opam
    #{{end}}
    setUx OPAMROOT $XDG_DATA_HOME/opam
    opam init --disable-shell-hook
end

function init_neovim
    if type -q nvim
        return
    end
    init_node_lts
    #{{if eq .chezmoi.os "darwin" }}
    brew_install neovim python
    pip3 install -U pynvim
    npm_install neovim
    #{{else}}
    paru_install neovim python-pynvim ripgrep fzf
    npm_install neovim
    #{{end}}
    add_path $XDG_DATA_HOME/nvim/mason/bin
end

## helpers

function brew_install
    set params
    set pkgs
    for arg in $argv
        if string match -- '--*' $arg > /dev/null
            set -a params $arg
        else
            set -a pkgs $arg
        end
    end
    for pkg in $pkgs
        if not brew list --version $params $pkg
            brew install $params $pkg
        end
    end
end

function paru_install
    paru -S --needed --noconfirm $argv
end

function add_path
    fish_add_path $argv;or return 0
end
