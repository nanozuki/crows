--- Module settings, store a settings table cross all neovim configs. And this
--- module will read "settings.json" from the config folder and override the
--- default settings defined here.
--- Choose json format for easily generated by Nix.

---@class Settings
---@field theme ThemeSettings
---@field use_global_statusline boolean
---@field hide_command_line boolean
---@field use_gofumpt boolean
---@class ThemeSettings
---@field name 'rose-pine' | 'nord' | 'zenbones'
---@field variant string
-- theme variants:
-- - rose-pine: 'main', 'dawn', 'moon'
-- - nord: 'main'
-- - zenbones: 'light', 'dark'

---@type Settings
local M = {
  theme = {
    name = 'rose-pine',
    variant = 'dawn',
  },
  use_global_statusline = false,
  hide_command_line = false,
  use_gofumpt = true,
}

-- Load local settings from settings.json
local local_settings_path = vim.fn.stdpath('config') .. '/settings.json'
local local_settings_file = io.open(local_settings_path, 'r')
if local_settings_file then
  local content = local_settings_file:read('*a')
  local cfg = vim.fn.json_decode(content)
  M = vim.tbl_deep_extend('force', M, cfg)
end

return M
